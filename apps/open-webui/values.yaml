# https://github.com/open-webui/helm-charts/blob/main/charts/open-webui/values.yaml
open-webui:
  ollama:
    enabled: false
  pipelines:
    enabled: false
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 1500m
      memory: 2Gi
  ingress:
    enabled: true
    class: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: "homelab-tunnel.eaglepass.io"
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    host: &openwebuihost ai.eaglepass.io
    tls: true
  extraEnvVars:
    - name: ENABLE_LOGIN_FORM
      value: "true"
    - name: WEBUI_URL
      value: *openwebuihost
    - name: BYPASS_MODEL_ACCESS_CONTROL
      value: "true"
    - name: OLLAMA_BASE_URL
      value: "http://ollama.ollama.svc.cluster.local:11434"
    - name: WEBUI_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: secrets
          key: webui-secret-key
    - name: OPENAI_API_KEY
      valueFrom:
        secretKeyRef:
          name: secrets
          key: openai-api-key
    # New environment variables for RAG and Audio STT engines
    - name: RAG_EMBEDDING_ENGINE
      value: "ollama"
    - name: AUDIO_STT_ENGINE
      value: "openai"
  podAnnotations:
    operator.1password.io/auto-restart: "true"
  extraResources:
    - apiVersion: v1
      kind: Secret
      metadata:
        name: secrets
        annotations:
          operator.1password.io/item-path: "vaults/4uaua4a45yuhnwhehp5bwylmti/items/gsdumrejgu5tvtft4rutwtbdgy"
          operator.1password.io/item-name: "secrets"
      type: Opaque
      stringData:
        webui-secret-key: "placeholder"
        openai-api-key: "placeholder"
    - apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: mcpo
        labels:
          app.kubernetes.io/name: mcpo
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: mcpo
        template:
          metadata:
            labels:
              app.kubernetes.io/name: mcpo
          spec:
            containers:
              - name: mcpo
                image: ghcr.io/open-webui/mcpo:latest
                imagePullPolicy: IfNotPresent
                args:
                  - "--host=0.0.0.0"
                  - "--port=8081"
                  - "--"
                  - "uvx"
                  - "mcp-server-time"   # replace with the MCP server to proxy
                ports:
                  - name: http
                    containerPort: 8081
                env:
                  - name: LOG_LEVEL
                    value: info
                resources: {}
    - apiVersion: v1
      kind: Service
      metadata:
        name: mcpo
        labels:
          app.kubernetes.io/name: mcpo
      spec:
        type: ClusterIP
        selector:
          app.kubernetes.io/name: mcpo
        ports:
          - name: http
            port: 8081
            targetPort: 8081
  image:
    repository: ghcr.io/open-webui/open-webui
    tag: "latest"
    pullPolicy: "Always"
  persistence:
    enabled: true
    existingClaim: openwebui-nfs-pvc
    additionalVolumes:
      - name: embedded-models
        persistentVolumeClaim:
          claimName: openwebui-embedded-models-pvc
      - name: openwebui-data
        persistentVolumeClaim:
          claimName: openwebui-data-pvc
    additionalVolumeMounts:
      - name: embedded-models
        mountPath: /app/embedded-models
      - name: openwebui-data
        mountPath: /app/backend/data