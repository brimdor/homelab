# https://github.com/open-webui/helm-charts/blob/main/charts/open-webui/values.yaml
open-webui:
  ollama:
    enabled: false
  pipelines:
    enabled: false
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 1500m
      memory: 2Gi
  ingress:
    enabled: true
    class: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: "homelab-tunnel.eaglepass.io"
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    host: &openwebuihost ai.eaglepass.io
    tls: true
  extraEnvVars:
    - name: ENABLE_LOGIN_FORM
      value: "true"
    - name: WEBUI_URL
      value: *openwebuihost
    - name: BYPASS_MODEL_ACCESS_CONTROL
      value: "true"
    - name: OLLAMA_BASE_URL
      value: "http://ollama.ollama.svc.cluster.local:11434"
    - name: WEBUI_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: secrets
          key: webui-secret-key
    - name: OPENAI_API_KEY
      valueFrom:
        secretKeyRef:
          name: secrets
          key: openai-api-key
    # New environment variables for RAG and Audio STT engines
    - name: RAG_EMBEDDING_ENGINE
      value: "ollama"
    - name: AUDIO_STT_ENGINE
      value: "openai"
    # Configure Open WebUI to call mcpo automatically
    - name: MCPO_URL
      value: "http://mcpo.open-webui.svc.cluster.local:8081"
    - name: MCPO_API_KEY
      valueFrom:
        secretKeyRef:
          name: secrets
          key: mcpo-api-key
  podAnnotations:
    operator.1password.io/auto-restart: "true"
  extraResources:
    - apiVersion: v1
      kind: Secret
      metadata:
        name: secrets
        annotations:
          operator.1password.io/item-path: "vaults/4uaua4a45yuhnwhehp5bwylmti/items/gsdumrejgu5tvtft4rutwtbdgy"
          operator.1password.io/item-name: "secrets"
      type: Opaque
      stringData:
        webui-secret-key: "placeholder"
        openai-api-key: "placeholder"
        mcpo-api-key: "placeholder"
    # mcpo Service (internal)
    - apiVersion: v1
      kind: Service
      metadata:
        name: mcpo
        labels:
          app.kubernetes.io/name: mcpo
      spec:
        type: ClusterIP
        selector:
          app.kubernetes.io/name: mcpo
        ports:
          - name: http
            port: 8081
            targetPort: 8081
    # mcpo Deployment with git-sync sidecar for hot-reloading config.json from GitHub
    - apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: mcpo
        labels:
          app.kubernetes.io/name: mcpo
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: mcpo
        template:
          metadata:
            labels:
              app.kubernetes.io/name: mcpo
            annotations:
              operator.1password.io/auto-restart: "true"
          spec:
            securityContext:
              runAsNonRoot: false
            initContainers:
              - name: wait-mcpo-secret
                image: busybox:1.36
                command: ["/bin/sh","-c"]
                args:
                  - |
                    set -eu
                    FILE=/var/secret/mcpo-api-key
                    # If the file is missing, it may be created shortly after pod start
                    for i in $(seq 1 120); do
                      if [ -f "$FILE" ]; then
                        VAL=$(cat "$FILE")
                        if [ -n "$VAL" ] && [ "$VAL" != "placeholder" ]; then
                          echo "mcpo-api-key populated"; exit 0
                        fi
                        echo "waiting for mcpo-api-key to be populated..."
                      else
                        echo "waiting for secret volume..."
                      fi
                      sleep 5
                    done
                    echo "mcpo-api-key was not populated in time" >&2; exit 1
                volumeMounts:
                  - name: mcpo-secret
                    mountPath: /var/secret
            containers:
              - name: mcpo
                image: ghcr.io/open-webui/mcpo:main
                imagePullPolicy: Always
                args:
                  - "--config"
                  - "/config/repo/config.json"
                  - "--host"
                  - "0.0.0.0"
                  - "--port"
                  - "8081"
                  - "--hot-reload"
                ports:
                  - name: http
                    containerPort: 8081
                env:
                  - name: MCPO_API_KEY
                    valueFrom:
                      secretKeyRef:
                        name: secrets
                        key: mcpo-api-key
                volumeMounts:
                  - name: mcpo-config
                    mountPath: /config
              - name: git-sync
                image: registry.k8s.io/git-sync/git-sync:v4.5.0
                imagePullPolicy: IfNotPresent
                env:
                  - name: GITSYNC_REPO
                    value: "https://github.com/brimdor/mcp-servers"
                  - name: GITSYNC_BRANCH
                    value: "main"
                  - name: GITSYNC_ROOT
                    value: "/config"
                  - name: GITSYNC_LINK
                    value: "repo"
                  - name: GITSYNC_PERIOD
                    value: "30s" # polling interval
                  - name: GITSYNC_ONE_TIME
                    value: "false"
                volumeMounts:
                  - name: mcpo-config
                    mountPath: /config
            volumes:
              - name: mcpo-config
                emptyDir: {}
              - name: mcpo-secret
                secret:
                  secretName: secrets
                  optional: true
                  items:
                    - key: mcpo-api-key
                      path: mcpo-api-key
  image:
    repository: ghcr.io/open-webui/open-webui
    tag: "latest"
    pullPolicy: "Always"
  persistence:
    enabled: true
    existingClaim: openwebui-nfs-pvc
    additionalVolumes:
      - name: embedded-models
        persistentVolumeClaim:
          claimName: openwebui-embedded-models-pvc
      - name: openwebui-data
        persistentVolumeClaim:
          claimName: openwebui-data-pvc
    additionalVolumeMounts:
      - name: embedded-models
        mountPath: /app/embedded-models
      - name: openwebui-data
        mountPath: /app/backend/data