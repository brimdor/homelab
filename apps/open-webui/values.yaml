open-webui:
  ollama:
    enabled: false

  pipelines:
    enabled: true

  image:
    repository: ghcr.io/open-webui/open-webui
    tag: latest
    pullPolicy: Always

  resources:
    limits:
      cpu: "2"
      memory: 4Gi
    requests:
      cpu: "1500m"
      memory: 2Gi

  ingress:
    enabled: true
    className: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: homelab-tunnel.eaglepass.io
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    host: &openwebuihost ai.eaglepass.io
    tls: true

  # Non-secret env here
  extraEnvVars:
    - name: ENABLE_LOGIN_FORM
      value: "true"
    - name: WEBUI_URL
      value: "https://ai.eaglepass.io"
    - name: BYPASS_MODEL_ACCESS_CONTROL
      value: "false"
    - name: OLLAMA_BASE_URL
      value: "http://ollama.ollama.svc.cluster.local:11434"
    - name: RAG_EMBEDDING_ENGINE
      value: "ollama"
    - name: AUDIO_STT_ENGINE
      value: "openai"
    - name: MCPO_URL
      value: "http://mcpo.open-webui.svc.cluster.local:8081"

  # Load all keys from the Secret that 1Password Operator populates
  extraEnvFrom:
    - secretRef:
        name: secrets

  # Annotate the workload so 1Password Operator manages the Secret lifecycle
  podAnnotations:
    operator.1password.io/item-path: "vaults/4uaua4a45yuhnwhehp5bwylmti/items/gsdumrejgu5tvtft4rutwtbdgy"
    operator.1password.io/item-name: "secrets"
    operator.1password.io/auto-restart: "true"

  persistence:
    enabled: true
    existingClaim: openwebui-nfs-pvc

  extraVolumes:
    - name: embedded-models
      persistentVolumeClaim:
        claimName: openwebui-embedded-models-pvc
    - name: openwebui-data
      persistentVolumeClaim:
        claimName: openwebui-data-pvc

  extraVolumeMounts:
    - name: embedded-models
      mountPath: /app/embedded-models
    - name: openwebui-data
      mountPath: /app/backend/data
