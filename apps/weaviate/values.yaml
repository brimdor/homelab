# values.yaml for Weaviate using the upstream Weaviate Helm sub-chart

# Upstream sub-chart values are nested under the dependency name 'weaviate'
weaviate:
  image:
    repository: cr.weaviate.io/semitechnologies/weaviate
    tag: "latest"
    pullPolicy: IfNotPresent
  imagePullSecrets: []

  # Environment variables (non-sensitive here). Sensitive like ROOT_PASSWORD must be set via secretKeyRef.
  env:
    - name: QUERY_DEFAULTS_LIMIT
      value: "25"
    - name: AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED
      value: "true"
    - name: PERSISTENCE_DATA_PATH
      value: "/var/lib/weaviate/data"
    - name: ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: secrets
          key: ROOT_PASSWORD
    # Example sensitive env (commented): provided via secretKeyRef below
    # - name: ROOT_PASSWORD
    #   valueFrom:
    #     secretKeyRef:
    #       name: secrets
    #       key: ROOT_PASSWORD

  # Service configuration (internal access)
  service:
    enabled: true
    type: ClusterIP
    annotations: {}
    ports:
      - name: http
        port: 8080
        targetPort: 8080
        protocol: TCP
      - name: grpc
        port: 50051
        targetPort: 50051
        protocol: TCP

  # Ingress (external access)
  ingress:
    enabled: false
    className: nginx
    annotations: {}
    hosts:
      - host: weaviate.eaglepass.io
        paths:
          - path: /
            pathType: Prefix
    tls: []
    # tls:
    #   - secretName: weaviate-tls-certificate
    #     hosts:
    #       - weaviate.eaglepass.io

  # Persistence for Weaviate data
  persistence:
    enabled: true
    data:
      # Use existingClaim if provided, otherwise create
      existingClaim: ""
      storageClass: ""
      accessModes: ["ReadWriteOnce"]
      size: 20Gi
      # PVC name should resolve to 'data' (upstream chart uses its own naming; we also create a PVC named 'data' below for backups)

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# 1Password Operator secret annotations configuration
secret:
  # Set after running tools/weaviate-op-create.sh
  itemPath: "vaults/<vault-id>/items/<item-id>"

# Backups CronJob settings (backs up the 'data' PVC to NFS)
backups:
  enabled: true
  schedule: "*/15 * * * *"
  retentionDays: 7
  nfs:
    server: "10.0.50.3"
    path: "/mnt/user/weaviate_backups" # placeholder, customize in your environment
  labels: {}
  annotations: {}
  podResources: {}
