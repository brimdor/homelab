# values.yaml for bolt-diy Helm chart using bjw-s common chart
# See https://github.com/bjw-s-labs/helm-charts/blob/main/charts/library/common/values.yaml for all options
app-template:
  controllers:
    main:
      containers:
        main:
          image:
            repository: linuxserver/sabnzbd
            tag: latest
            pullPolicy: Always
          env:
            PUID: "99"
            PGID: "100"
            TZ: "America/Chicago"
        fix-host:
          image:
            repository: alpine
            tag: latest
          name: fix-host
          command:
            - /bin/sh
            - -c
            - |
              # Wait for sabnzbd.ini to exist
              while [ ! -f /config/sabnzbd.ini ]; do
                echo "Waiting for /config/sabnzbd.ini to be created..."
                sleep 5
              done

              if [ ! -f /config/bees-knees ]; then
                if grep -q '^host_whitelist =' /config/sabnzbd.ini; then
                  sed -i '/^host_whitelist =.*/c\host_whitelist = sabnzbd.eaglepass.io' /config/sabnzbd.ini
                else
                  echo 'host_whitelist = sabnzbd.eaglepass.io' >> /config/sabnzbd.ini
                fi
                touch /config/bees-knees
                echo "[INFO] host_whitelist added to /config/sabnzbd.ini"
              fi

              sleep infinity
      initContainers:
        restore:
          image:
            repository: alpine
            tag: latest
          command:
            - /bin/sh
            - -c
            - |
              set -e

              echo "[INFO] Checking for /config/bees-knees marker file..."
              if [ -f /config/bees-knees ]; then
                echo "[INFO] Restore skipped: /config/bees-knees exists."
                exit 0
              fi

              echo "[INFO] Looking for latest backup zip in /backups..."
              latest_backup=$(ls -t /backups/sabnzbd_backup_*.zip 2>/dev/null | head -n 1)

              if [ -z "$latest_backup" ]; then
                echo "[ERROR] No backup zip found in /backups. Skipping restore."
                exit 0
              fi

              echo "[INFO] Found backup: $latest_backup"
              echo "[INFO] Extracting backup to /tmp/sabnzbd..."
              mkdir -p /tmp/sabnzbd
              if unzip -o "$latest_backup" -d /tmp/sabnzbd; then
                echo "[INFO] Extraction successful."
              else
                echo "[ERROR] Extraction failed!"
                exit 1
              fi

              # Move files to their destinations
              move_and_report() {
                src="$1"
                dest="$2"
                if [ -f "$src" ]; then
                  mkdir -p "$(dirname "$dest")"
                  mv -f "$src" "$dest"
                  echo "[INFO] Restored $(basename "$src") to $dest"
                else
                  echo "[WARN] $src not found in backup."
                fi
              }

              move_and_report /tmp/sabnzbd/history1.db /config/admin/history1.db
              move_and_report /tmp/sabnzbd/rss_data.sab /config/admin/rss_data.sab
              move_and_report /tmp/sabnzbd/sabnzbd.ini /config/sabnzbd.ini
              move_and_report /tmp/sabnzbd/totals10.sab /config/admin/totals10.sab

              touch /config/bees-knees
              echo "[INFO] Restore complete. Marker file created at /config/bees-knees."
  service:
    main:
      controller: main
      primary: true
      type: ClusterIP
      externalTrafficPolicy:
      ports:
        http:
          port: 8080
          protocol: HTTP
  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: sabnzbd.eaglepass.io
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - hosts:
            - sabnzbd.eaglepass.io
          secretName: sabnzbd-tls-certificate
  persistence:
    data:
      accessMode: ReadWriteOnce
      size: 50Gi
      advancedMounts:
        main:
          main:
            - path: /config
          fix-host:
            - path: /config
          restore:
            - path: /config
    nfs-intermediate:
      type: nfs
      server: 10.0.50.3
      path: /mnt/user/sabnzbd_inter
      advancedMounts:
        main:
          main:
            - path: /incomplete-downloads
    nfs-backups:
      type: nfs
      server: 10.0.50.3
      path: /mnt/user/sabnzbd_backups
      advancedMounts:
        main:
          main:
            - path: /backups
          restore:
            - path: /backups
    nfs-downloads:
      type: nfs
      server: 10.0.50.3
      path: /mnt/user/downloads
      advancedMounts:
        main:
          main:
            - path: /downloads
    nfs-apps:
      type: nfs
      server: 10.0.50.3
      path: /mnt/user/apps
      advancedMounts:
        main:
          main:
            - path: /apps