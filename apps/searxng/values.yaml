# bjw-s app-template values for SearxNG
app-template:
  controllers:
    main:
      annotations:
        operator.1password.io/item-path: "vaults/4uaua4a45yuhnwhehp5bwylmti/items/zmzs6wc2wftouzhoaufk7eivdy"
        operator.1password.io/item-name: "secrets"
      containers:
        main:
          image:
            repository: searxng/searxng
            tag: latest
            pullPolicy: IfNotPresent
          env:
            # Non-sensitive literals
            # INSTANCE_NAME: "SearxNG"
            SEARXNG_BASE_URL: "https://searxng.eaglepass.io"
            HOSTNAME: "SearXNG"
            # SEARCH_DEFAULT_LANGUAGE: "en"
            # Ensure SearXNG binds to IPv4 any address inside the pod
            # SEARXNG_BIND_ADDRESS: "0.0.0.0"
            # SEARXNG_PORT: "8080"
            # Sensitive envs via secretKeyRef (1Password Operator backed Secret named 'secrets')
            SERVER_SECRET_KEY:
              valueFrom:
                secretKeyRef:
                  name: "secrets"
                  key: "secret-key"
            # SearXNG reads SECRET_KEY / SEARXNG_SECRET to populate server.secret_key
            SECRET_KEY:
              valueFrom:
                secretKeyRef:
                  name: "secrets"
                  key: "secret-key"
            SEARXNG_SECRET:
              valueFrom:
                secretKeyRef:
                  name: "secrets"
                  key: "secret-key"
            # Example engine keys (commented out by default)
            # GOOGLE_API_KEY:
            #   valueFrom:
            #     secretKeyRef:
            #       name: "secrets"
    redis:
      containers:
        main:
          image:
            repository: valkey/valkey
            tag: 8-alpine
            pullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - "exec valkey-server --save 30 1 --loglevel warning"
          resources: {}
    # config:
    #   enabled: true
    #   type: configMap
    #   name: searxng-config
    #   advancedMounts:
    #     main:
    #       main:
    #         - path: /etc/searxng/settings.yml
    #           subPath: settings.yml
    # Optional data persistence (disabled by default)
  service:
    main:
      controller: main
      primary: true
      enabled: true
      type: ClusterIP
      annotations: {}
      ports:
        http:
          port: 8080
          protocol: HTTP
    redis:
      controller: redis
      enabled: true
      type: ClusterIP
      ports:
        redis:
          port: 6379
          protocol: TCP
  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: searxng.eaglepass.io
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - hosts:
            - searxng.eaglepass.io
          secretName: searxng-tls-certificate
  # Common pod options
  defaultPodOptions:
    securityContext: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    labels: {}
  persistence:
    data:
      enabled: false
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 5Gi
      storageClass: ""
      existingClaim: ""
      advancedMounts:
        main:
          main:
            - path: /var/cache/searxng
    etc:
      enabled: false
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      storageClass: ""
      existingClaim: ""
      advancedMounts:
        main:
          main:
            - path: /etc/searxng
    config:
      enabled: true
      type: configMap
      name: searxng-config
      items:
        - key: settings.yml
          path: settings.yml
      advancedMounts:
        main:
          main:
            - path: /etc/searxng/settings.yml
              subPath: settings.yml
    limiter:
      enabled: true
      type: configMap
      name: searxng-limiter
      items:
        - key: limiter.toml
          path: limiter.toml
      advancedMounts:
        main:
          main:
            - path: /etc/searxng/limiter.toml
              subPath: limiter.toml
    redisdata:
      enabled: false
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 5Gi
      storageClass: ""
      existingClaim: ""
      advancedMounts:
        redis:
          main:
            - path: /data
  configMaps:
    config:
      enabled: true
      data:
        settings.yml: |
          # Use defaults and override only what's needed
          use_default_settings: true
          server:
            bind_address: 0.0.0.0
            port: 8080
            base_url: "https://searxng.eaglepass.io"
          ui:
            # Minimal UI options; adjust theme if desired
            default_theme: simple
            static_use_hash: true

          search:
            # Ensure JSON is allowed for API clients like Open WebUI
            formats:
              - html
              - json
            # Language and safe search defaults
            safe_search: 1
            language: "en-US"

          # Basic bot-detection knobs; tailor pass/block lists for cluster ranges
          botdetection:
            ip_lists:
              block_ip: []
              pass_ip: []
            link_token: false

          # Outgoing network timeouts
          outgoing:
            request_timeout: 6.0
            max_redirects: 3
            pool_connections: 10
            pool_maxsize: 20

          # CORS for API use if accessing directly (ingress usually handles this)
          http:
            method: GET
            headers:
              Access-Control-Allow-Origin: "*"
              Access-Control-Allow-Methods: "GET, POST, OPTIONS"
              Access-Control-Allow-Headers: "Content-Type, X-Requested-With"

          # Logging verbosity
          logging:
            version: 1
            disable_existing_loggers: false
            root:
              level: INFO
              handlers: [console]
            handlers:
              console:
                class: logging.StreamHandler
                level: INFO
                formatter: simple
                stream: ext://sys.stdout
            formatters:
              simple:
                format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    limiter:
      enabled: true
      data:
        limiter.toml: |
          [botdetection]
          # Number of proxy hops to trust in X-Forwarded-For
          trusted_proxies = 1
          # Network prefix lengths for client IP evaluation
          ipv4_prefix = 32
          ipv6_prefix = 48
          # Allow whitelisted IPs from the SearXNG organization (enabled by default)
          pass_searxng_org = true

          [botdetection.ip_limit]
          # Do not monitor link-local networks by default
          filter_link_local = false

          # Activate link_token method if you need token-based limiting
          link_token = false

          [botdetection.ip_lists]
          # Block specific IPs (example IP listed, remove/comment as appropriate)
          block_ip = [
            # '93.184.216.34',
          ]
          # IPs with unrestricted access (example entries, adjust as needed)
          pass_ip = [
            # '192.168.0.0/16',
            # 'fe80::/10'
          ]
          



# Non-sensitive configuration rendered into a ConfigMap
# config:
#   settingsYaml: |
#     # Minimal non-sensitive SearxNG configuration, templated by Helm.
#     server:
#       port: 8080
#       limiter: true
#       # Bind address set by env or default
#     ui:
#       static_use_hash: true
#     search:
#       safe_search: 0
#     redis:
#       # Use the redis service created by this chart
#   url: redis://{{ include "bjw-s.common.fullname" . }}-redis.{{ .Release.Namespace }}.svc.cluster.local:6379/0

# Backups CronJob (only meaningful if persistence.data.enabled=true)
backups:
  enabled: false
  schedule: "*/15 * * * *"
  retentionDays: 7
  nfs:
    server: "10.0.50.3"
  path: "/exports/backups/searxng"
  annotations: {}
  resources: {}
