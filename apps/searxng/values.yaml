# bjw-s app-template values for SearxNG
app-template:
  controllers:
    main:
      annotations: {}
      containers:
        main:
          image:
            repository: searxng/searxng
            tag: latest
            pullPolicy: IfNotPresent
          env:
            # Non-sensitive literals
            # INSTANCE_NAME: "SearxNG"
            SEARXNG_BASE_URL: "https://searxng.eaglepass.io"
            # SEARCH_DEFAULT_LANGUAGE: "en"
            # Ensure SearXNG binds to IPv4 any address inside the pod
            # SEARXNG_BIND_ADDRESS: "0.0.0.0"
            # SEARXNG_PORT: "8080"
            # Sensitive envs via secretKeyRef (1Password Operator backed Secret named 'secrets')
            SECRET_KEY:
              valueFrom:
                secretKeyRef:
                  name: "secrets"
                  key: "secret-key"
            # Example engine keys (commented out by default)
            # GOOGLE_API_KEY:
            #   valueFrom:
            #     secretKeyRef:
            #       name: "secrets"
            #       key: "google-api-key"
            # BING_API_KEY:
            #   valueFrom:
            #     secretKeyRef:
            #       name: "secrets"
            #       key: "bing-api-key"
          # Probes (can be tuned as needed)
          probes:
            liveness:
              enabled: false
              custom: true
              spec:
                httpGet:
                  path: /
                  port: http
            readiness:
              enabled: false
              custom: true
              spec:
                httpGet:
                  path: /
                  port: http
            startup:
              enabled: false
          # Resources placeholder (tune per environment)
          resources: {}
    redis:
      containers:
        main:
          image:
            repository: valkey/valkey
            tag: 8-alpine
            pullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - "exec valkey-server --save 30 1 --loglevel warning"
          resources: {}
  service:
    main:
      controller: main
      primary: true
      enabled: true
      type: ClusterIP
      annotations: {}
      ports:
        http:
          port: 8080
          protocol: HTTP
    redis:
      controller: redis
      enabled: true
      type: ClusterIP
      ports:
        redis:
          port: 6379
          protocol: TCP
  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: searxng.eaglepass.io
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - hosts:
            - searxng.eaglepass.io
          secretName: searxng-tls-certificate
  # Common pod options
  defaultPodOptions:
    securityContext: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    annotations:
      operator.1password.io/item-path: "vaults/4uaua4a45yuhnwhehp5bwylmti/items/zmzs6wc2wftouzhoaufk7eivdy"
      operator.1password.io/item-name: "secrets"
    labels: {}
  persistence:
    config:
      enabled: true
      type: configMap
      name: searxng-config
      advancedMounts:
        main:
          main:
            - path: /etc/searxng/settings.yml
              subPath: settings.yml
    # Optional data persistence (disabled by default)
    data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 5Gi
      storageClass: ""
      existingClaim: ""
      advancedMounts:
        main:
          main:
            - path: /var/cache/searxng
    redisdata:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 5Gi
      storageClass: ""
      existingClaim: ""
      advancedMounts:
        redis:
          main:
            - path: /data

# Non-sensitive configuration rendered into a ConfigMap
config:
  settingsYaml: |
    # Minimal non-sensitive SearxNG configuration, templated by Helm.
    server:
      port: 8080
      limiter: true
      # Bind address set by env or default
    ui:
      static_use_hash: true
    search:
      safe_search: 0
    redis:
      # Use the redis service created by this chart
  url: redis://{{ include "bjw-s.common.fullname" . }}-redis.{{ .Release.Namespace }}.svc.cluster.local:6379/0

# Backups CronJob (only meaningful if persistence.data.enabled=true)
backups:
  enabled: false
  schedule: "*/15 * * * *"
  retentionDays: 7
  nfs:
    server: "10.0.50.3"
  path: "/exports/backups/searxng"
  annotations: {}
  resources: {}

