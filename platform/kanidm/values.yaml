app-template:
  controllers:
    main:
      type: statefulset
      pod:
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      initContainers:
        fix-perms:
          image:
            repository: alpine
            tag: "3.20"
          securityContext:
            runAsUser: 0
          command: ["/bin/sh","-lc","chmod 0750 /data || true; chmod 0440 /data/tls.* || true"]
      containers:
        main:
          image:
            repository: docker.io/kanidm/server
            tag: "1.7.0"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true

      statefulset:
        volumeClaimTemplates:
          - name: data
            size: 1Gi
            accessMode: ReadWriteOnce
            globalMounts:
              - path: /data

  configMaps:
    config:
      enabled: true
      data:
        server.toml: |
          bindaddress = "[::]:443"
          ldapbindaddress = "[::]:636"
          db_path = "/data/kanidm.db"
          tls_chain = "/data/tls.crt"
          tls_key   = "/data/tls.key"
          domain = "auth.eaglepass.io"
          origin = "https://auth.eaglepass.io"

  persistence:
    config:
      enabled: true
      type: configMap
      name: kanidm-config
      globalMounts:
        - path: /data/server.toml
          subPath: server.toml
          readOnly: true

    tls-cert:                 # ✅ lowercase, becomes volume name
      enabled: true
      type: secret
      name: kanidm-tls-certificate   # must contain tls.crt and tls.key
      defaultMode: 0440
      globalMounts:
        - path: /data/tls.crt
          subPath: tls.crt
          readOnly: true
        - path: /data/tls.key
          subPath: tls.key
          readOnly: true

    tls-ca:                   # ✅ lowercase, separate from tls-cert
      enabled: true
      type: secret
      name: kanidm-selfsigned-certificate
      globalMounts:
        - path: /data/ca.crt
          subPath: ca.crt
          readOnly: true

  service:
    main:
      ports:
        http:
          enabled: false
        https:
          port: 443
          protocol: HTTPS
        ldap:
          port: 636
          protocol: TCP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      hosts:
        - host: &host auth.eaglepass.io
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: https
      tls:
        - hosts: [*host]
          secretName: kanidm-tls-certificate
