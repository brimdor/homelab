---
# Source: weaviate/charts/weaviate/templates/weaviateSecretClusterAPI.yaml
apiVersion: v1
kind: Secret
metadata:
  name: weaviate-cluster-api-basic-auth
type: kubernetes.io/basic-auth
data:  
  username: "QUUydWVqdWdiV3EwakkwZ05xVVhhT0JxSlMzcW9nR1Q="
  password: "ZEZQUmtydWJmV3FwSGRMQjA3V2lRWURadUNzb2VyVUg="
---
# Source: weaviate/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secrets
  annotations:
  operator.1password.io/item-path: "vaults/4uaua4a45yuhnwhehp5bwylmti/items/xe4jnzi46s7xonfwgsvkyuvapa"
  operator.1password.io/item-name: "secrets"
type: Opaque
data: {}
---
# Source: weaviate/charts/weaviate/templates/weaviateConfigMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: weaviate-config
  labels:
    app.kubernetes.io/name: weaviate
    app.kubernetes.io/managed-by: Helm
data:
  conf.yaml: |-
    ---
    authentication:
      anonymous_access:
        enabled: true
      oidc:
        enabled: false
    authorization:
      admin_list:
        enabled: false
      rbac:
        enabled: false
    
    query_defaults:
      limit: 100
    debug: false
---
# Source: weaviate/charts/weaviate/templates/weaviateHeadlessService.yaml
apiVersion: v1
kind: Service
metadata:
  name: weaviate-headless
  labels:
    app.kubernetes.io/name: weaviate
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: weaviate
  ports:
    - protocol: TCP
      port: 80
      targetPort: 7000
  publishNotReadyAddresses: true
---
# Source: weaviate/charts/weaviate/templates/weaviateService.yaml
apiVersion: v1
kind: Service
metadata:
  name: weaviate
  labels:
    app.kubernetes.io/name: weaviate
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: weaviate
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
---
# Source: weaviate/charts/weaviate/templates/weaviateServiceGRPC.yaml
apiVersion: v1
kind: Service
metadata:
  name: weaviate-grpc
  labels:
    app.kubernetes.io/name: weaviate
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: weaviate
  ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
---
# Source: weaviate/charts/weaviate/templates/weaviateStatefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: weaviate
  labels:
    name: weaviate
    app: weaviate
    app.kubernetes.io/name: weaviate
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  serviceName: weaviate-headless
  selector:
    matchLabels:
      app: weaviate
  template:
    metadata:
      labels:
        app: weaviate
        app.kubernetes.io/name: weaviate
        app.kubernetes.io/managed-by: Helm
      annotations:
        # To restart Pods if the ConfigMap is updated.
        checksum/config: 15f76df24b3ba12ab00dd7ca32228ea77506d8a7de79d71380c71250e1173898
    spec:
      securityContext:
        {}
      terminationGracePeriodSeconds: 600
      
      
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.io/alpine:latest"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=524288", "vm.overcommit_memory=1"]
      containers:
      - name: weaviate
        image: 'cr.weaviate.io/semitechnologies/weaviate:latest'
        imagePullPolicy: IfNotPresent
        command: 
          - /bin/weaviate
        args: 
          - --host
          - 0.0.0.0
          - --port
          - "8080"
          - --scheme
          - http
          - --config-file
          - /weaviate-config/conf.yaml
          - --read-timeout=60s
          - --write-timeout=60s
        resources:
          {}
        env:
          - name: CLUSTER_DATA_BIND_PORT
            value: "7001"
          - name: CLUSTER_GOSSIP_BIND_PORT
            value: "7000"
          - name: GOGC
            value: "100"
          - name: PROMETHEUS_MONITORING_ENABLED
            value: "false"
          - name: PROMETHEUS_MONITORING_GROUP
            value: "false"
          - name: QUERY_MAXIMUM_RESULTS
            value: "100000"
          - name: RAFT_BOOTSTRAP_TIMEOUT
            value: "600"
          - name: REINDEX_VECTOR_DIMENSIONS_AT_STARTUP
            value: "false"
          - name: TRACK_VECTOR_DIMENSIONS
            value: "false"
          - name: ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secrets
                key: "ROOT_PASSWORD"
          - name: RUNTIME_OVERRIDES_ENABLED
            value: "false"
          - name: RUNTIME_OVERRIDES_PATH
            value: "/config/overrides.yaml"
          - name: RUNTIME_OVERRIDES_LOAD_INTERVAL
            value: "2m"
          - name: CLUSTER_BASIC_AUTH_USERNAME
            valueFrom:
              secretKeyRef:
                name: weaviate-cluster-api-basic-auth
                key: username
          - name: CLUSTER_BASIC_AUTH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: weaviate-cluster-api-basic-auth
                key: password
          - name: PERSISTENCE_DATA_PATH
            value: '/var/lib/weaviate'
          - name: DEFAULT_VECTORIZER_MODULE
            value: none
          
          - name: RAFT_JOIN
            value: "weaviate-0"
          - name: RAFT_BOOTSTRAP_EXPECT
            value: "1"
          
          
          - name: CLUSTER_JOIN
            value: weaviate-headless.code.svc.cluster.local.
        ports:
          - containerPort: 8080
          - name: metrics
            containerPort: 2112
            protocol: TCP
          
          - name: grpc
            containerPort: 50051
            protocol: TCP
        volumeMounts:
          - name: weaviate-config
            mountPath: /weaviate-config
          - name: weaviate-data
            mountPath: /var/lib/weaviate
          
        livenessProbe:
          httpGet:
            path: /v1/.well-known/live
            port: 8080
          initialDelaySeconds: 900
          periodSeconds: 10
          failureThreshold: 30
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /v1/.well-known/ready
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 3
        securityContext:
          {}
      volumes:
        - name: weaviate-config
          configMap:
            name: weaviate-config
        
      affinity:
        
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - weaviate
              topologyKey: kubernetes.io/hostname
            weight: 1

  volumeClaimTemplates:
  - metadata:
      name: weaviate-data
      labels:
        app.kubernetes.io/name: weaviate
        app.kubernetes.io/managed-by: Helm
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: 
      resources:
        requests:
          storage: 32Gi
---
# Source: weaviate/templates/backup-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: weaviate-backup
spec:
  schedule: "*/15 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: alpine:3.20
              command:
                - /bin/sh
                - -c
                - |
                  set -euo pipefail
                  ts=$(date -u +%Y%m%dT%H%M%SZ)
                  dest="/nfs/weaviate-${ts}.tar.gz"
                  echo "[backup] Archiving /data to $dest"
                  tar -czf "$dest" -C / data
                  echo "[backup] Removing files older than 7 days"
                  find /nfs -type f -name 'weaviate-*.tar.gz' -mtime +7 -delete
              volumeMounts:
                - name: data
                  mountPath: /data
                - name: nfs
                  mountPath: /nfs
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: "weaviate-data-weaviate-0"
            - name: nfs
              nfs:
                server: "10.0.50.3"
                path: "/path/to/backups/weaviate"
